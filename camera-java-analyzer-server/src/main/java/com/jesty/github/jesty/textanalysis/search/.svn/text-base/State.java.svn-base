package eu.kostia.textanalysis.search;

import java.io.Serializable;

public class State<M extends Matchable> implements Serializable {

	/**
	 * Next input character (KEY)
	 */
	private char nextChar;

	/**
	 * Left subtrie
	 */
	private State<M> left;

	/**
	 * Middle subtrie
	 */
	private State<M> middle;

	/**
	 * Right subtrie.
	 */
	private State<M> right;

	/**
	 * Failure and output links as defined by Aho & Corasick.
	 */
	private State<M> failure;

	/**
	 * Output for final states.
	 */
	private M output;
	
	/**
	 * Default constructor.
	 */
	public State() {
		super();
	}

	public char getNextChar() {
		return nextChar;
	}
	
	public void setNextChar(char nextChar) {
		this.nextChar = nextChar;
	}

	public State<M> getLeft() {
		return left;
	}

	public void setLeft(State<M> left) {
		this.left = left;
	}

	public State<M> getMiddle() {
		return middle;
	}

	public void setMiddle(State<M> middle) {
		this.middle = middle;
	}

	public State<M> getRight() {
		return right;
	}

	public void setRight(State<M> right) {
		this.right = right;
	}

	public State<M> getFailure() {
		return failure;
	}

	public void setFailure(State<M> failure) {
		this.failure = failure;
	}

	public M getOutput() {
		return output;
	}

	public void setOutput(M output) {
		this.output = output;
	}
	
	

}
